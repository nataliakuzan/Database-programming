create or replace PROCEDURE assign_waiter_for_order IS
   staff_id staff.employee_id%TYPE;
BEGIN
      SELECT employee_id INTO staff_id
      FROM(SELECT s.employee_id, COUNT(o.employee_id) as orders
        FROM staff s JOIN orders o
        ON (s.employee_id  = o.employee_id)
        GROUP BY s.employee_id
        ORDER BY COUNT(o.employee_id) ASC) WHERE ROWNUM = 1;

      UPDATE orders SET employee_id = staff_id WHERE employee_id IS NULL;

      IF sql%ROWCOUNT = 0 THEN
         DBMS_OUTPUT.put_line('All orders have assigned waiter.');
      ELSE 
         DBMS_OUTPUT.put_line('Waiter with id ' || staff_id || ' was assigned to ' || sql%ROWCOUNT || ' of new orders.');
      END IF;
END assign_waiter_for_order;


CREATE OR REPLACE Function price_of_order
   ( v_order_id IN ordered_dishes.order_id%TYPE )
   RETURN number
IS
   v_total_price number;
BEGIN
  SELECT total_price_of_meal INTO v_total_price
      FROM (SELECT sum(price*quantity) AS total_price_of_meal
        FROM ordered_dishes JOIN menu
        ON (ordered_dishes.dish_id = menu.dish_id)
        WHERE order_id = v_order_id);
RETURN v_total_price;
END;

UPDATE orders SET total_price = price_of_order(order_id) where total_price = 0;